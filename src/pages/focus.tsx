import { NextPage } from "next"
import Head from "next/head"
import { useState, useEffect } from "react"

interface Task {
  name: string
  pomodoros: number
  completed: number
}

const Pomofocus: NextPage = () => {
  const [tasks, setTasks] = useState<Array<Task>>([])
  const [taskName, setTaskName] = useState("")
  const [pomodoro, setPomodoro] = useState(0)
  const [now, setNow] = useState(new Date())

  useEffect(() => {
    const interval = setInterval(() => {
      setNow(new Date())
    }, 1000)
    return () => clearInterval(interval)
  },)

  const addTask = (name: string, pomodoros: number) => {
    setTasks([...tasks, { name, pomodoros, completed: 0 }])
  }

  return (<>
    <Head>
      <title>Sean Pe</title>
      <meta name="description" content="Generated by create-t3-app" />
      <link rel="icon" href="/favicon.ico" />
    </Head>
    <main className="bg-black text-white w-full h-screen">
      <input type="text" placeholder="Add a task" value={taskName} onChange={(e) => setTaskName(e.target.value)} />
      <input type="number" placeholder="Pomodoros" value={pomodoro} onChange={(e) => setPomodoro(Number(e.target.value))} />
      <button onClick={() => addTask(taskName, pomodoro)}>Add Task</button>
      <div className="container flex">
        <ul>
          {tasks.map((task, index) =>
            <li key={index}>{task.name} + {task.completed}/{task.pomodoros}</li>
          )}
        </ul>
        <div className="flex justify-center w-96">
          <div>{now.getHours().toString().padStart(2, '0')}:{now.getMinutes().toString().padStart(2, '0')}:{now.getSeconds().toString().padStart(2, '0')}</div>
          <div></div>
        </div>
      </div>
    </main>
  </>)

}

export default Pomofocus
